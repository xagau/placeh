policy_module(placeh, 1.100.1)

########################################
#
# Declarations
#

type placeh_t;
type placeh_exec_t;
init_daemon_domain(placeh_t, placeh_exec_t)

permissive placeh_t;

type placeh_initrc_exec_t;
init_script_file(placeh_initrc_exec_t)

type placeh_conf_t;
files_type(placeh_conf_t)

type placeh_var_lib_t;
files_type(placeh_var_lib_t)

type placeh_var_run_t;
files_type(placeh_var_run_t)

type placeh_port_t;
corenet_port(placeh_port_t)

########################################
#
# placeh local policy
#
allow placeh_t self:process { fork };

allow placeh_t self:fifo_file rw_fifo_file_perms;
allow placeh_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(placeh_t, placeh_conf_t, placeh_conf_t)
manage_files_pattern(placeh_t, placeh_conf_t, placeh_conf_t)

manage_dirs_pattern(placeh_t, placeh_var_lib_t, placeh_var_lib_t)
manage_files_pattern(placeh_t, placeh_var_lib_t, placeh_var_lib_t)
files_var_lib_filetrans(placeh_t, placeh_var_lib_t, { dir file })

manage_dirs_pattern(placeh_t, placeh_var_run_t, placeh_var_run_t)
manage_files_pattern(placeh_t, placeh_var_run_t, placeh_var_run_t)

sysnet_dns_name_resolve(placeh_t)
corenet_all_recvfrom_unlabeled(placeh_t)

allow placeh_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(placeh_t)
corenet_tcp_sendrecv_generic_node(placeh_t)
corenet_tcp_sendrecv_all_ports(placeh_t)
corenet_tcp_bind_generic_node(placeh_t)

gen_require(`
    type placeh_port_t;
')
allow placeh_t placeh_port_t:tcp_socket name_bind;

gen_require(`
    type placeh_port_t;
')
allow placeh_t placeh_port_t:tcp_socket name_connect;

domain_use_interactive_fds(placeh_t)

files_read_etc_files(placeh_t)

miscfiles_read_localization(placeh_t)

sysnet_dns_name_resolve(placeh_t)

allow placeh_t placeh_exec_t:file execute_no_trans;
allow placeh_t self:process setsched;
corecmd_exec_ls(placeh_t)
corenet_tcp_connect_http_port(placeh_t)
dev_read_urand(placeh_t)
fs_getattr_xattr_fs(placeh_t)
kernel_read_system_state(placeh_t)
